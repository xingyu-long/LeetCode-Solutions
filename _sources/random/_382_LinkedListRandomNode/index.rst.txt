=========================
 382 Linkedlistrandomnode
=========================

Java Solution
-------------

.. code-block:: java

   /*
    * @Date: 06/20/2019 07:25:50
    * @LastEditTime: 12/02/2020 14:52:59
    * @Description: 蓄水池抽样
    */
   package com.leetcode.random;
   
   import java.util.Random;
   import com.leetcode.common.ListNode;
   
   public class _382_LinkedListRandomNode {
   
       private ListNode head;
       private Random rmd;
   
       public _382_LinkedListRandomNode(ListNode head) {
           this.head = head;
           rmd = new Random();
       }
   
       /** Returns a random node's value. */
       public int getRandom() {
           int count = 0;
           int res = -1;
           ListNode curr = head;
           while (curr != null) {
               if (rmd.nextInt(++count) == 0) {
                   res = curr.val;
               }
               curr = curr.next;
           }
           return res;
       }
   }
   

Py Solution
-----------

.. code-block:: py

   from random import randrange
   from typing import Optional
   
   from leetcode.common.py_utils import ListNode
   
   
   class Solution:
       """
       [1, 2, 3]
   
       for 1, 1 * (1/2) * (2/3) -> 1/3
       for 2, (1/2) * (2/3) -> 1/3
       for 3, 1/3
       """
   
       def __init__(self, head: Optional[ListNode]):
           self.head = head
   
       def getRandom(self) -> int:
           curr = self.head
           count = 0
           res = -1
           while curr:
               count += 1
               random = randrange(0, count)
               if random == 0:
                   res = curr.val
               curr = curr.next
           return res
   

