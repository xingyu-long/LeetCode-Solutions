==============================
 1539 Kthmissingpositivenumber
==============================

Py Solution
-----------

.. code-block:: py

   from typing import List
   
   
   class Solution:
       def findKthPositive(self, arr: List[int], k: int) -> int:
   
           def count_miss(idx):
               # for idx, the default num should be idx+1 and the gap would be arr[idx] - (idx + 1)
               return arr[idx] - (idx + 1)
   
           left, right = 0, len(arr) - 1
           while left <= right:
               mid = left + (right - left) // 2
               count = count_miss(mid)
               if count >= k:
                   right = mid - 1
               else:
                   left = mid + 1
   
           return left + k
   

Java Solution
-------------

.. code-block:: java

   /*
    * @Date: 01/06/2021 10:03:09
    * @LastEditTime: 01/06/2021 10:05:20
    * @Description: Array, Binary Search
    */
   package com.leetcode.array;
   
   public class _1539_KthMissingPositiveNumber {
       public int findKthPositive(int[] arr, int k) {
           if (arr == null || arr.length == 0) {
               return 0;
           }
           int curr = 1, count = k;
           int index = 0, n = arr.length;
           while (index < n) {
               if (curr == arr[index]) {
                   index++;
               } else {
                   count--;
                   if (count == 0)
                       return curr;
               }
               curr++;
           }
           return n + k;
       }
   }
   

