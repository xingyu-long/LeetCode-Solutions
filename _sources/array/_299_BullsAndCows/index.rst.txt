=================
 299 Bullsandcows
=================

Java Solution
-------------

.. code-block:: java

   package com.leetcode.array;
   
   import java.util.ArrayList;
   import java.util.Hashtable;
   import java.util.Map;
   
   public class _299_BullsAndCows {
   
       /**
        * 299. Bulls and Cows
        * When: 2019/3/11-12
        * review1: 2019/7/1
        * review2:2019/8/24
        * @param secret
        * @param guess
        * @return
        */
   
       // time:O(m) space:O(1)
       public static String getHint(String secret, String guess) {
           if (secret.length() != guess.length()) return "";
           int bull = 0, cow = 0;
           int[] counter = new int[10];
           for (int i = 0; i < secret.length(); i++) {
               if (secret.charAt(i) == guess.charAt(i)) {
                   bull++;
               } else {
                   counter[secret.charAt(i) - '0']++;
               }
           }
   
           for (int i = 0; i < secret.length(); i++) {
               int index = guess.charAt(i) - '0';
               if (secret.charAt(i) != guess.charAt(i) && counter[index] > 0) {
                   cow++;
                   counter[index]--;
               }
           }
           return bull + "A" + cow + "B";
       }
   
       //利用新的数组来记录其每个数组出现的次数，其中secret++，guess--即可
       public static String getHint2(String secret, String guess) {
           int bulls = 0;
           int cows = 0;
           int[] count = new int[10];
           for (int i = 0; i < secret.length(); i++) {
               if (secret.charAt(i) == guess.charAt(i)) {
                   bulls++;
               } else {
                   // 这里的++和--操作都会做 并且先要secret++ 跟上面的原理一样
                   if (count[secret.charAt(i) - '0']++ < 0) cows++;
                   if (count[guess.charAt(i) - '0']-- > 0) cows++;
               }
           }
           return bulls + "A" + cows + "B";
       }
   }
   

Py Solution
-----------

.. code-block:: py

   """
   299. Bulls and Cows
   ---
   
   You are playing the Bulls and Cows game with your friend.
   
   You write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:
   
   The number of "bulls", which are digits in the guess that are in the correct position.
   The number of "cows", which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.
   Given the secret number secret and your friend's guess guess, return the hint for your friend's guess.
   
   The hint should be formatted as "xAyB", where x is the number of bulls and y is the number of cows. Note that both secret and guess may contain duplicate digits.
   ---
   
   Example 1:
   
   Input: secret = "1807", guess = "7810"
   Output: "1A3B"
   Explanation: Bulls are connected with a '|' and cows are underlined:
   "1807"
     |
   "7810"
   
   Example 2:
   
   Input: secret = "1123", guess = "0111"
   Output: "1A1B"
   Explanation: Bulls are connected with a '|' and cows are underlined:
   "1123"        "1123"
     |      or     |
   "0111"        "0111"
   Note that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.
   """
   
   
   class Solution:
       def getHint(self, secret: str, guess: str) -> str:
           bulls, cows = 0, 0
           c = {}
           for i in range(len(secret)):
               if secret[i] == guess[i]:
                   bulls += 1
               else:
                   c[secret[i]] = c.get(secret[i], 0) + 1
                   # it means we still have more deducted number from guess
                   if c[secret[i]] <= 0:
                       cows += 1
                   c[guess[i]] = c.get(guess[i], 0) - 1
                   # it means we still have more added number from secret
                   if c[guess[i]] >= 0:
                       cows += 1
           return f"{bulls}A{cows}B"
   

