======================
 217 Containsduplicate
======================

Java Solution
-------------

.. code-block:: java

   package com.leetcode.array;
   
   import java.util.Arrays;
   import java.util.HashMap;
   import java.util.HashSet;
   
   public class _217_ContainsDuplicate {
   
       // time: O(n^2) space: O(n)
       public boolean containsDuplicate(int[] nums) {
           //solution1: 利用key-value的形式计数
           if (nums == null || nums.length < 1) {
               return false;
           }
   
           HashMap<Integer, Integer> map = new HashMap<>();
           for (int num : nums) {
               if (!map.containsKey(num)) { // o(n)
                   map.put(num, 1);
               } else {
                   map.put(num, map.get(num) + 1);
               }
               if (map.get(num) > 1) {
                   return true;
               }
           }
           return false;
       }
   
       // time: O(nlogn) space: O(n)
       public boolean containsDuplicate2(int[] nums) {
           // 利用排序，然后前后两个找是否相同
           Arrays.sort(nums);
           for (int i = 1; i < nums.length; i++) {
               if (nums[i] == nums[i - 1]) {
                   return true;
               }
           }
           return false;
       }
   
       // time: O(n) space: O(n)
       public boolean containsDuplicate3(int[] nums) {
   //        利用set不能放入重复的特性
           HashSet<Integer> set = new HashSet<>();
           for (int num : nums) {
               if (!set.add(num)) {
                   return true;
               }
           }
           return false;
       }
   }
   

Py Solution
-----------

.. code-block:: py

   from typing import List
   
   """
   217. Contains Duplicate
   ---
   
   Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.
   ---
   
   Example 1:
   
   Input: nums = [1,2,3,1]
   Output: true
   Example 2:
   
   Input: nums = [1,2,3,4]
   Output: false
   Example 3:
   
   Input: nums = [1,1,1,3,3,4,3,2,4,2]
   Output: true
   """
   
   
   class Solution:
       def containsDuplicate(self, nums: List[int]) -> bool:
           s = set()
           for num in nums:
               if num in s:
                   return True
               s.add(num)
           return False
   

