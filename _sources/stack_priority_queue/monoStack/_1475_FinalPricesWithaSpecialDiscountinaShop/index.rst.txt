============================================
 1475 Finalpriceswithaspecialdiscountinashop
============================================

Java Solution
-------------

.. code-block:: java

   package com.leetcode.stack_priority_queue.monoStack;
   
   import java.util.Stack;
   
   /**
    * @Date: 06/13/2020
    * @Description: mono stack
    **/
   public class _1475_FinalPricesWithaSpecialDiscountinaShop {
       // 不用map存关系也可以
       // time:O(n) space:O(n)
       public int[] finalPrices(int[] prices) {
           if (prices == null || prices.length == 0) {
               return new int[]{};
           }
           Stack<Integer> stack = new Stack<>();
           int[] res = new int[prices.length];
           for (int i = 0; i < prices.length; i++) {
               res[i] = prices[i];
               while (!stack.isEmpty() && prices[i] <= prices[stack.peek()]) {
                   res[stack.pop()] -= prices[i];
               }
               stack.push(i);
           }
           return res;
       }
   }
   

Py Solution
-----------

.. code-block:: py

   from typing import List
   
   
   class Solution:
       def finalPrices(self, prices: List[int]) -> List[int]:
           res = prices.copy()
           stack = []
           for i, price in enumerate(prices):
               while stack and price <= prices[stack[-1]]:
                   idx = stack.pop()
                   res[idx] = prices[idx] - price
   
               stack.append(i)
           return res
   

